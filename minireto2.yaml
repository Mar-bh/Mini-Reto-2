openapi: 3.0.3
info:
  title: Study Vibes API
  description: |-
    API de Study Vibes (Mini-Reto-2). Esta API interna se encarga de obtener la información de las temáticas de las playlist posibles. Así como cuenta con distintos métodos para acceder, modificar, publicar y eliminar configuracionnes de las playlists que los usuarios generen.
  version: 1.0.11
servers:
  - url: localhost:3001
tags:
  - name: playlist
    description: operaciones relacionadas con los sonidos 
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name : theme 
    description: operaciones relacionadas con las temáticas de los sonidos
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /theme:
    get:
      tags:
        - theme
      summary: get all the information of the playlist theme
      description: Update an existing playlist by Id
      operationId: updatePet
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /theme/{themeId}:
    get:
      tags:
        - theme
      summary: get all the information of the playlist theme
      description: Update an existing playlist by Id
      operationId: updatePet
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /playlist:
    get:
      tags:
        - playlist
      summary: get all playlist
      description: Update an existing playlist by Id
      operationId: updatePet
      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - playlist
      summary: Add a new playlist to the database
      description: Add a new playlist to the database
      operationId: addPet
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /playlist/{playlistId}:
    get:
      tags:
        - playlist
      summary: Find playlist by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: playlistId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
    put:
      tags:
        - playlist
      summary: Updates a playlist in the database with the user configuration
      description: ''
      operationId: updatePetWithForm
      parameters:
        - name: playlistId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    delete:
      tags:
        - playlist
      summary: Deletes a playlist
      description: delete a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: playlistId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
